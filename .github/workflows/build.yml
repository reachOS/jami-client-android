name: Build release artifact

on:
  push:
    branches: [ "main", "jami-builder" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install dev stuff
        run: |
          sudo apt update
          sudo apt install -y libc6-dev autopoint
      - uses: actions/checkout@v4
      - name: Set git credentials store
        run: git config credential.helper store
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            gradle
            updater/gradle
            jami-client-android/jami-android/gradle
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x jami-android/gradlew

      - name: Decode Android Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > jami-android/app.keystore

      - name: Write jami key
        run: |
          [[ -d ~/.gradle ]] || mkdir ~/.gradle
          echo "jamiAppSigningKey=${{ secrets.KEYSTORE_PASSWORD }}" >> ~/.gradle/gradle.properties

      - name: Generate swig
        run: |
          cd daemon/bin/jni
          PACKAGEDIR=jami-android/libjamiclient/src/main/java ./make-swig.sh

      - name: Build jami
        run: |
          cd jami-android && ./gradlew --no-daemon app:assembleWithUnifiedPushRelease -Parchs=armeabi-v7a,arm64-v8a

      - name: Write jami version
        run: |
          cd jami-android && ./gradlew --no-daemon app:writeAppVersion

      - name: Read jami version
        id: jami_version
        run: |
          version=$(cat jami-android/app/build/version.txt)
          echo "App version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Upload jami
        uses: actions/upload-artifact@v4
        with:
          name: jami-${{ steps.jami_version.outputs.version }}
          if-no-files-found: error
          path: jami-android/app/build/outputs/apk/withUnifiedPush/release/app-withUnifiedPush-release.apk
